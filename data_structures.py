"""
Data structures used for communication between modules.
"""

class ConversationState(object):
    """
    Stores all state associated with a conversation.  Instances are
    created when a conversation begins and are passed throughout the
    application.  The receiver of a ConversationState will update the
    state by modifying the ConversationState that it receives.

    The ConversationState can be persisted by pickling it using the
    pickle or cPickle modules.
    """

    def __init__(self):
        self.user_name = ""
        self.last_user_input = ""
        self.current_state = "greeting"


class ParsedInput(dict):
    """
    Parsed representation of user input, generated by the NLU for use
    by the DM.  I'm not sure what kind of data structure this will be,
    but this prototype subclasses the built-in Python dict type.
    """
    pass


class ContentPlan(object):
    """
    Representation of content to express to user, generated by the DM
    for use by the NLG.  I'm not sure what kind of data structure is
    best for this.
    """

    def __init__(self, description):
        self.description = description
